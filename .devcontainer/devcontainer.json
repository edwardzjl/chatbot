// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-dockerfile
// Also read <https://mcr.microsoft.com/en-us/product/devcontainers/python/about>
{
	"name": "chatbot",
	"dockerComposeFile": ["./docker-compose.yml"],
	"service": "chatbot",
	"workspaceFolder": "/workspace",
	// TODO: it seems not working
	// uncomment next line will keep the container running after the devcontainer is closed
	// "shutdownAction": "none",
	// "shutdownAction": "stopCompose",

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// NOTE: devcontainer only supports forwarding the ports from the "main" container.
	// See: <https://github.com/microsoft/vscode-remote-release/issues/4645>
	// Once this issue is resolved, I can forward ports from other services, like 5432 for postgres and 8080 for llama.cpp.
	"forwardPorts": [3000, 8000],
	"portsAttributes": {
		"3000": {
			"label": "web"
		},
		"8000": {
			"label": "api"
		}
	},
	// nvm has to be run in an interactive shell while postCreateCommand runs in a non-interactive one.
	// Running a script with '#!/bin/zsh -i' can solve this. See <https://github.com/microsoft/vscode-dev-containers/issues/559#issuecomment-693105152>
	// Note 1: Do not add 'sh' before the script, which makes it non-interactive.
	// Note 2: You need to make the script executable in git repo.
	// Note 3: The $pwd of this command is $workspaceFolder
	"postCreateCommand": ".devcontainer/init.sh",
	"customizations": {
		"vscode": {
			"settings": {
				"python.pythonPath": "/workspace/api/.venv/bin/python"
			},
			// TODO: It seems that these extensions are not installed during startup
			"extensions": [
				"ms-python.python",
				"ms-python.debugpy"
			]
		}
	}
}

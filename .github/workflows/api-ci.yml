name: Chatbot API CI

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/api-ci.yml'
      - 'api/**'
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - '.github/workflows/api-ci.yml'
      - 'api/**'
  workflow_dispatch:  # Allows to trigger the workflow manually in GitHub UI

jobs:
  lint:
    defaults:
      run:
        working-directory: api
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.11"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          # cache-dependency-path: pyproject.toml
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'requirements.txt') }}-test-v03
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt
      - name: Install Black
        run: pip install "black"
      - name: Lint
        run: make lint

  test:
    defaults:
      run:
        working-directory: api
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          # cache-dependency-path: pyproject.toml
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ matrix.pydantic-version }}-${{ hashFiles('pyproject.toml', 'requirements.txt') }}-test-v03
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt
      - name: Test
        run: make test
